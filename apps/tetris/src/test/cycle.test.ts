import { describe, expect, it } from "vitest";
import { cycle } from "../helpers";
import type { Cell, Grid } from "../types";

describe("cycle", () => {
  const _: Cell = { piece: null };
  const O: Cell = { piece: { id: 0, label: "O" } };
  const I: Cell = { piece: { id: 0, label: "I" } };

  it("to remove the last row when filled", () => {
    // prettier-ignore
    const input: Grid = [
    //  0   1   2   3   4   5   6   7   8   9   10  11
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 0
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 1
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 2
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 3
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 4
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 5
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 6
    ];

    // prettier-ignore
    const expected: Grid = [
    //  0   1   2   3   4   5   6   7   8   9   10  11
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 0
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 1
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 2
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 3
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 4
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 5
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 6
    ];

    const output = cycle(input);

    expect(output).toStrictEqual(expected);
  });

  it("should not change anything when empty", () => {
    // prettier-ignore
    const input: Grid = [
    //  0   1   2   3   4   5   6   7   8   9   10  11
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 0
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 1
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 2
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 3
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 4
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 5
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 6
    ];

    // prettier-ignore
    const expected: Grid = [
    //  0   1   2   3   4   5   6   7   8   9   10  11
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 0
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 1
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 2
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 3
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 4
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 5
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 6
    ];

    const output = cycle(input);

    expect(output).toStrictEqual(expected);
  });

  it("to NOT remove the last row when filled", () => {
    // prettier-ignore
    const input: Grid = [
    //  0   1   2   3   4   5   6   7   8   9   10  11
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 0
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 1
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 2
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 3
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 4
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 5
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 6
    ];

    // prettier-ignore
    const expected: Grid = [
    //  0   1   2   3   4   5   6   7   8   9   10  11
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 0
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 1
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 2
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 3
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 4
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 5
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 6
    ];

    const output = cycle(input);

    expect(output).toStrictEqual(expected);
  });

  it("to remove the last 2 rows when filled", () => {
    // prettier-ignore
    const input: Grid = [
    //  0   1   2   3   4   5   6   7   8   9   10  11
      [ O,  O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 0
      [ O,  O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 1
      [ O,  O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 2
      [ O,  O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 3
      [ O,  O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 4
      [ O,  O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 5
      [ O,  O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 6
    ];

    // prettier-ignore
    const expected: Grid = [
    //  0   1   2   3   4   5   6   7   8   9   10  11
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 0
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 1
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 2
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 3
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 4
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 5
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 6
    ];

    const output = cycle(input);

    expect(output).toStrictEqual(expected);
  });

  it("to remove filled rows that are not last #1", () => {
    // prettier-ignore
    const input: Grid = [
    //  0   1   2   3   4   5   6   7   8   9   10  11
      [ O,  O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 0
      [ O,  O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 1
      [ O,  O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 2
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 3
      [ O,  O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 4
      [ O,  O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 5
      [ O,  O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 6
    ];

    // prettier-ignore
    const expected: Grid = [
    //  0   1   2   3   4   5   6   7   8   9   10  11
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 0
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 1
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 2
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 3
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 4
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 5
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 6
    ];

    const output = cycle(input);

    expect(output).toStrictEqual(expected);
  });

  it("to remove filled rows that are not last #2", () => {
    // prettier-ignore
    const input: Grid = [
    //  0   1   2   3   4   5   6   7   8   9   10  11
      [ O,  O,  O,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 0
      [ O,  O,  O,  I,  _,  _,  _,  _,  _,  _,  _,  _, ], // 1
      [ O,  O,  O,  I,  I,  _,  _,  _,  _,  _,  _,  _, ], // 2
      [ O,  _,  O,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 3
      [ O,  I,  I,  I,  _,  _,  _,  _,  _,  _,  _,  _, ], // 4
      [ O,  O,  O,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 5
      [ O,  O,  O,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 6
    ];

    // prettier-ignore
    const expected: Grid = [
    //  0   1   2   3   4   5   6   7   8   9   10  11
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 0
      [ O,  I,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 1
      [ O,  I,  I,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 2
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 3
      [ I,  I,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 4
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 5
      [ O,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 6
    ];

    const output = cycle(input);

    expect(output).toStrictEqual(expected);
  });

  it("to remove filled rows that are not last #3", () => {
    // prettier-ignore
    const input: Grid = [
    //  0   1   2   3   4   5   6   7   8   9   10  11
      [ O,  O,  O,  O,  O,  O,  O,  O,  O,  O,  O,  O, ], // 0
      [ O,  O,  O,  O,  O,  O,  O,  O,  O,  O,  O,  I, ], // 1
      [ O,  O,  O,  O,  O,  O,  O,  O,  O,  O,  O,  O, ], // 2
      [ I,  I,  I,  I,  _,  _,  _,  _,  _,  _,  _,  _, ], // 3
      [ O,  O,  O,  O,  O,  O,  O,  O,  O,  O,  O,  _, ], // 4
      [ O,  O,  O,  O,  O,  O,  O,  O,  O,  O,  O,  I, ], // 5
      [ O,  O,  O,  O,  O,  O,  O,  O,  O,  O,  O,  _, ], // 6
    ];

    // prettier-ignore
    const expected: Grid = [
    //  0   1   2   3   4   5   6   7   8   9   10  11
      [ O,  O,  O,  O,  O,  O,  O,  O,  _,  _,  _,  _, ], // 0
      [ O,  O,  O,  O,  O,  O,  O,  I,  _,  _,  _,  _, ], // 1
      [ O,  O,  O,  O,  O,  O,  O,  O,  _,  _,  _,  _, ], // 2
      [ _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _,  _, ], // 3
      [ O,  O,  O,  O,  O,  O,  O,  _,  _,  _,  _,  _, ], // 4
      [ O,  O,  O,  O,  O,  O,  O,  I,  _,  _,  _,  _, ], // 5
      [ O,  O,  O,  O,  O,  O,  O,  _,  _,  _,  _,  _, ], // 6
    ];

    const output = cycle(input);

    expect(output).toStrictEqual(expected);
  });
});
